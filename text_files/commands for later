
@client.command(aliases=['cnamecard', 'cn'])
@commands.cooldown(30, 5, commands.BucketType.guild)
async def custom_namecard(ctx):
    await ctx.send(f'{ctx.author.mention}, What would you like the title of your namecard to be? Type "-" for blank')
    title_reply = await client.wait_for('message',  check=lambda message: message.author.id == ctx.author.id, timeout=20)
    if title_reply == '-':
        title = ''
    else:
        title = title_reply
    await ctx.send(f'{ctx.author.mention}'
                   f', What would you like the description of your namecard to be? Type "-" for blank')
    description_reply = await client.wait_for('message',  check=lambda message: message.author.id == ctx.author.id, timeout=20)
    if description_reply == '-':
        description = ''
    else:
        description = description_reply
    custom_embed = discord.Embed(title=f'{title.content}', description=f'{description.content}')
    await ctx.send(embed=custom_embed)

gacha command

            lastfm_embed2 = discord.Embed(title=f'{username}\'s recent songs', description='Page 2',
                                          colour=discord.Colour.random())
            lastfm_embed2.set_thumbnail(url=avatar)
            lastfm_embed2.set_footer(text='React to the arrow buttons below to move between pages')
            for i in range(10, len(track_list)-30):
                lastfm_embed2.add_field(
                    name=f"Song: {track_list[i]['name']}",
                    value=f"Artist: {track_list[i]['artist']['#text']} \n"
                          f"Date: {track_list[i]['date']['#text']} \n"
                          f"Album: {track_list[i]['album']['#text']}",
                    inline=False
                )

            lastfm_embed3 = discord.Embed(title=f'{username}\'s recent songs', description='Page 3',
                                          colour=discord.Colour.random())
            lastfm_embed3.set_thumbnail(url=avatar)
            lastfm_embed3.set_footer(text='React to the arrow buttons below to move between pages')
            for i in range(20, len(track_list)-20):
                lastfm_embed3.add_field(
                    name=f"Song: {track_list[i]['name']}",
                    value=f"Artist: {track_list[i]['artist']['#text']} \n"
                          f"Date: {track_list[i]['date']['#text']} \n"
                          f"Album: {track_list[i]['album']['#text']}",
                    inline=False
                )

            lastfm_embed4 = discord.Embed(title=f'{username}\'s recent songs', description='Page 4',
                                          colour=discord.Colour.random())
            lastfm_embed4.set_thumbnail(url=avatar)
            lastfm_embed4.set_footer(text='React to the arrow buttons below to move between pages')
            for i in range(30, len(track_list)-20):
                lastfm_embed4.add_field(
                    name=f"Song: {track_list[i]['name']}",
                    value=f"Artist: {track_list[i]['artist']['#text']} \n"
                          f"Date: {track_list[i]['date']['#text']} \n"
                          f"Album: {track_list[i]['album']['#text']}",
                    inline=False
                )

            lastfm_embed5 = discord.Embed(title=f'{username}\'s recent songs', description='Page 5',
                                          colour=discord.Colour.random())
            lastfm_embed5.set_thumbnail(url=avatar)
            lastfm_embed5.set_footer(text='React to the arrow buttons below to move between pages')
            for i in range(40, len(track_list)-10):
                lastfm_embed5.add_field(
                    name=f"Song: {track_list[i]['name']}",
                    value=f"Artist: {track_list[i]['artist']['#text']} \n"
                          f"Date: {track_list[i]['date']['#text']} \n"
                          f"Album: {track_list[i]['album']['#text']}",
                    inline=False
                )

            self.client.lastfm_pages = [lastfm_embed1, lastfm_embed2, lastfm_embed3, lastfm_embed4, lastfm_embed5]

            buttons = [u'\u23EA', u'\u25C0', u'\u25B6', u'\u23E9']
            current = 0
            sent = await ctx.send(embed=self.client.lastfm_pages[current])
            for button in buttons:
                await sent.add_reaction(button)

            while True:
                try:
                    reaction, user = await self.client.wait_for('reaction_add',
                    check=lambda reaction, user: user == ctx.author.id and reaction in buttons, timeout=60)
                except asyncio.TimeoutError:
                    await sent.delete()
                    await ctx.send('Timed Out')

                else:
                    previous_page = current

                    if reaction.emoji == u'\u23EA':
                        current = 0

                    elif reaction.emoji == u'\u25C0' and current > 0:
                        current -= 1

                    elif reaction.emoji == u'\u25B6' and current < len(self.client.lastfm_pages)-1:
                        current += 1

                    elif reaction.emoji == u'\u23E9':
                        current = len(self.client.lastfm_pages)-1

                    for button in buttons:
                        await sent.remove_reaction(button, ctx.author)

                    if current != previous_page:
                        await sent.edit(embed=self.client.lastfm_pages[current])